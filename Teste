local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/RayzMd/Energy-shock-simulator/main/SyniX"))()
local Window = OrionLib:MakeWindow({Name = "Batalha de guerra", HidePremium = false, SaveConfig = false, ConfigFolder = "Synix"})



local PlayerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://ID_DO_ICONE",
    PremiumOnly = false
})

local autokickEnabled = false

local function autokick()
    local Cam = workspace.CurrentCamera

    local hotkey = true
    local maxDistance = 90 -- Defina a distância máxima aqui

    function lookAt(target, eye)
        Cam.CFrame = CFrame.new(target, eye)
    end

    function getClosestEnemyPlayerToCursor(trg_part)
        local nearest = nil
        local last = math.huge
        for i, v in pairs(game.Players:GetPlayers()) do
            if v ~= game.Players.LocalPlayer and game.Players.LocalPlayer.Character and v.Character and v.Character:FindFirstChild(trg_part) then
                if game.Players.LocalPlayer.Character:FindFirstChild(trg_part) then
                    -- Verifique se o jogador não está no mesmo time
                    if v.Team ~= game.Players.LocalPlayer.Team then
                        local ePos, vissss = workspace.CurrentCamera:WorldToViewportPoint(v.Character[trg_part].Position)
                        local AccPos = Vector2.new(ePos.x, ePos.y)
                        local mousePos = Vector2.new(workspace.CurrentCamera.ViewportSize.x / 2, workspace.CurrentCamera.ViewportSize.y / 2)
                        local distance = (AccPos - mousePos).magnitude
                        if distance < last and vissss and hotkey and distance < maxDistance then
                            last = distance
                            nearest = v
                        end
                    end
                end
            end
        end
        return nearest
    end

    game:GetService("RunService").RenderStepped:Connect(function()
        if autokickEnabled then
            local closest = getClosestEnemyPlayerToCursor("Head")
            if closest and closest.Character:FindFirstChild("Head") then
                lookAt(Cam.CFrame.p, closest.Character:FindFirstChild("Head").Position)
            end
        end
    end)
end
local toggle = PlayerTab:AddToggle({
    Name = "Aimbot",
    Default = false,
    Callback = function(Value)
        autokickEnabled = Value -- Set the autokick status
        if Value then
            autokick()
        end
    end
})


PlayerTab:AddButton({
    Name = "HITBOX",
    Callback = function()
        for i, v in pairs(game:GetService('Players'):GetPlayers()) do
    if v.Name ~= game:GetService('Players').LocalPlayer.Name then
        pcall(function()
            local humanoidRootPart = v.Character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                humanoidRootPart.Size = Vector3.new(20, 20, 20)
                humanoidRootPart.Transparency = 0.7
                humanoidRootPart.BrickColor = BrickColor.new("Bright blue")
                humanoidRootPart.Material = Enum.Material.Neon
                humanoidRootPart.CanCollide = false
            end
        end)
    end
end
    end
})



local Section = PlayerTab:AddSection({
    Name = "speed"
})  
local function setSpeed(value)
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character and character:FindFirstChild("Humanoid") then
            local humanoid = character:FindFirstChild("Humanoid")
            humanoid.WalkSpeed = tonumber(value)
        end
    end
  
  -- Speed aumenta velocidade
    PlayerTab:AddDropdown({
        Name = "Speed",
        Default = "16",
        Options = {"0","5","10","16","22","30","35", "40", "50", "55","65","70","80","90","95","100","125","150","200","250","300","325","350","375","390","400",},
        Callback = function(value)
            setSpeed(value)
        end
    })            
local Section = PlayerTab:AddSection({
    Name = "Select Player!"
})

local PlayerTP

local Plr = {}
for i, v in pairs(game:GetService("Players"):GetPlayers()) do
    table.insert(Plr, v.Name)
end

PlayerTab:AddDropdown({
    Name = "Select Player",
    Default = "1",
    Options = Plr,
    Callback = function(value)
        PlayerTP = value
    end
})

PlayerTab:AddButton({
    Name = "Click To TP",
    Callback = function()
        game.Players.LocalPlayer.Character:MoveTo(game.Players[PlayerTP].Character.HumanoidRootPart.Position)
    end
})

local TPPlayer = false
PlayerTab:AddToggle({
    Name = "Auto TP",
    Default = false,
    Callback = function(value)
        TPPlayer = value
        while TPPlayer do
            wait()
            game.Players.LocalPlayer.Character:MoveTo(game.Players[PlayerTP].Character.HumanoidRootPart.Position)
        end
    end
})

PlayerTab:AddButton({
    Name = "Refresh Dropdown",
    Callback = function()
        Plr = {}
        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            table.insert(Plr, v.Name)
        end
    end
})


local Section = PlayerTab:AddSection({
    Name = "Selecionar Jogador"
})

-- Corrigindo a variável "BarraVida" duplicada e o código do ESP

-- ...

local isEspHabilitado = false -- Variável para rastrear se o ESP está ativado
local espToggle -- Referência ao botão de alternância

espToggle = PlayerTab:AddToggle({
    Name = "ESP Jogador",
    Default = false,
    Callback = function(value)
        isEspHabilitado = value -- Atualiza o status do ESP com o valor do botão de alternância
    end
})

-- Crie a barra de vida fora do loop para que seja uma barra única para todos os jogadores
local BarraVida = Instance.new("Frame")
BarraVida.Size = UDim2.new(0, FixedBarWidth, 0.1, 0)
BarraVida.Position = UDim2.new(0, 0, 0.9, 0)

while wait() do
    pcall(function()
        for i, v in pairs(game.Players:GetChildren()) do
            if isEspHabilitado and not v.Character.Head:FindFirstChild("ESP") then
                local BillboardGui = Instance.new("BillboardGui")
                local TextLabel = Instance.new("TextLabel")

                BillboardGui.Parent = v.Character.Head
                BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                BillboardGui.Active = true
                BillboardGui.Name = "ESP"
                BillboardGui.AlwaysOnTop = true
                BillboardGui.LightInfluence = 1.000
                BillboardGui.Size = UDim2.new(0, 200, 0, 50)
                BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)
                
                TextLabel.Parent = BillboardGui
                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.BackgroundTransparency = 1.000
                TextLabel.Size = UDim2.new(0, 200, 0, 50)
                TextLabel.Font = Enum.Font.GothamBold
                TextLabel.Text = v.Name .. "\nDistância: Calculando...\nVida: Calculando..." -- Inicialmente calculando a distância e vida
                TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.TextScaled = true
                TextLabel.TextSize = 14.000
                TextLabel.TextStrokeTransparency = 0.000
                TextLabel.TextWrapped = true

                -- Configurações da barra de vida
                BarraVida.Parent = BillboardGui
                BarraVida.Size = UDim2.new(0, FixedBarWidth, 0.1, 0)
                BarraVida.Position = UDim2.new(0, 0, 0.9, 0)
                
                -- Resto do código para atualizar distância e vida
                -- ...
            elseif not isEspHabilitado and v.Character.Head:FindFirstChild("ESP") then
                v.Character.Head.ESP:Remove() -- Remove o ESP se estiver desativado
            end
        end
    end)
end

local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://ID_DO_ICONE",
    PremiumOnly = false
})

TeleportTab:AddButton({
    Name = "Bandeira",
    Callback = function()
        -- Defina as coordenadas para onde deseja teleportar
local teleportLocation = CFrame.new(Vector3.new(26.882144927978516, 84.6449966430664, 148.70867919921875))

-- Encontre o jogador que você deseja teleportar
local player = game.Players.LocalPlayer -- Substitua pelo jogador que deseja teleportar

-- Teleporte o jogador para a coordenada
player.Character:SetPrimaryPartCFrame(teleportLocation)

    end
})
